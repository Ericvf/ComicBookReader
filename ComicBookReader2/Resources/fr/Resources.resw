<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="appDescription" xml:space="preserve">
    <value>A simple comic book reader app!</value>
  </data>
  <data name="appDisplayName" xml:space="preserve">
    <value>Comic Book Reader</value>
  </data>
  <data name="GeneralLoading.Text" xml:space="preserve">
    <value>Chargement</value>
    <comment>Loading</comment>
  </data>
  <data name="GroupComics" xml:space="preserve">
    <value>Bandes dessinées</value>
    <comment>Comics</comment>
  </data>
  <data name="GroupPublishers" xml:space="preserve">
    <value>Éditeurs</value>
    <comment>Publishers</comment>
  </data>
  <data name="GroupSeries" xml:space="preserve">
    <value>Série</value>
    <comment>Series</comment>
  </data>
  <data name="HomeAppBarImport.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Importer</value>
    <comment>Import</comment>
  </data>
  <data name="HomeAppBarRefresh.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Rafraîchir</value>
    <comment>Refresh</comment>
  </data>
  <data name="HomeNoComics.Text" xml:space="preserve">
    <value>Pas de bande dessinée présenter,</value>
    <comment>No comics present,</comment>
  </data>
  <data name="HomeTapImport.Text" xml:space="preserve">
    <value>toucher ici pour importer ...</value>
    <comment>tap here to import...</comment>
  </data>
  <data name="HomeTitle.Text" xml:space="preserve">
    <value>Comic Book Reader</value>
    <comment>Comic Book Reader</comment>
  </data>
  <data name="ImportAllDone.Text" xml:space="preserve">
    <value>tout est fait ...</value>
    <comment>all done...</comment>
  </data>
  <data name="ImportButtonFile.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>dossier</value>
    <comment>file</comment>
  </data>
  <data name="ImportButtonFolder.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>répertoire</value>
    <comment>folder</comment>
  </data>
  <data name="ImportFolderOrFile.Text" xml:space="preserve">
    <value>importer un répertoire ou un fichier ...</value>
    <comment>import a folder or file...</comment>
  </data>
  <data name="ImportItem.Text" xml:space="preserve">
    <value>article</value>
    <comment>item</comment>
  </data>
  <data name="ImportOf.Text" xml:space="preserve">
    <value>de</value>
    <comment>of</comment>
  </data>
  <data name="ImportTitle.Text" xml:space="preserve">
    <value>importer</value>
    <comment>Import</comment>
  </data>
  <data name="ImportUseButtons.Text" xml:space="preserve">
    <value>utilisez les boutons ci-dessous pour</value>
    <comment>use the buttons below to</comment>
  </data>
  <data name="ImportWaitWhileImporting.Text" xml:space="preserve">
    <value>s'il vous plaît patienter pendant que l'importation ...</value>
    <comment>please wait while importing...</comment>
  </data>
  <data name="GeneralCancel.Content" xml:space="preserve">
    <value>Annuler</value>
    <comment>Cancel</comment>
  </data>
  <data name="GeneralSave.Content" xml:space="preserve">
    <value>Sauver</value>
    <comment>Save</comment>
  </data>
  <data name="ComicDetailsFileSize.Text" xml:space="preserve">
    <value>Taille du fichier:</value>
    <comment>File size:</comment>
  </data>
  <data name="ComicDetailsIssue.Text" xml:space="preserve">
    <value>ARTICLE:</value>
    <comment>ISSUE:</comment>
  </data>
  <data name="ComicDetailsNumberOfPages.Text" xml:space="preserve">
    <value>Nombre de pages:</value>
    <comment>Number of pages:</comment>
  </data>
  <data name="ComicDetailsPublisher.Text" xml:space="preserve">
    <value>ÉDITEUR:</value>
    <comment>PUBLISHER:</comment>
  </data>
  <data name="ComicDetailsSeries.Text" xml:space="preserve">
    <value>SERIES:</value>
    <comment>SERIES:</comment>
  </data>
  <data name="ComicDetailsTitle.Text" xml:space="preserve">
    <value>TITRE:</value>
    <comment>TITLE:</comment>
  </data>
  <data name="GeneralAppBarSelectAll.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Sélectionner tout</value>
    <comment>Select All</comment>
  </data>
  <data name="GeneralAppBarUpdate.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Mettre à jour</value>
    <comment>Update</comment>
  </data>
  <data name="PublisherTitle.Text" xml:space="preserve">
    <value>Editeur:</value>
    <comment>Publisher:</comment>
  </data>
  <data name="SeriesTitle.Text" xml:space="preserve">
    <value>Série:</value>
    <comment>Series: </comment>
  </data>
  <data name="AllComicsTitle.Text" xml:space="preserve">
    <value>Toutes les BD</value>
    <comment>All Comics</comment>
  </data>
  <data name="AllPublishersTitle.Text" xml:space="preserve">
    <value>Tous les éditeurs</value>
    <comment>All Publishers</comment>
  </data>
  <data name="AllSeriesTitle.Text" xml:space="preserve">
    <value>Toutes les séries</value>
    <comment>All Series</comment>
  </data>
  <data name="ComicDetailsDeleteComic" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer la bande dessinée actuelle?</value>
    <comment>Are you sure you want to delete the current comic?</comment>
  </data>
  <data name="ComicDetailsDeletePage" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer la page?</value>
    <comment>Are you sure you want to delete the page?</comment>
  </data>
  <data name="GeneralDelete" xml:space="preserve">
    <value>effacer</value>
    <comment>delete</comment>
  </data>
  <data name="GeneralDontDelete" xml:space="preserve">
    <value>Ne pas supprimer</value>
    <comment>Don't delete</comment>
  </data>
  <data name="GeneralGoAhead" xml:space="preserve">
    <value>oui</value>
    <comment>Go ahead</comment>
  </data>
  <data name="GeneralIssues.Text" xml:space="preserve">
    <value>articles</value>
    <comment>issues</comment>
  </data>
  <data name="PublisherInputMessage" xml:space="preserve">
    <value>S'il vous plaît utiliser la zone de texte pour fournir un nom d'éditeur nouvelle:</value>
    <comment>Please use the textbox to provide a new publisher name:</comment>
  </data>
  <data name="PublisherInputTitle" xml:space="preserve">
    <value>Nom de l'éditeur d'entrée</value>
    <comment>Input publisher name</comment>
  </data>
  <data name="SeriesInputMessage" xml:space="preserve">
    <value>S'il vous plaît utiliser la zone de texte à fournir un nom d'une nouvelle série:</value>
    <comment>Please use the textbox to provide a new series name:</comment>
  </data>
  <data name="SeriesInputTitle" xml:space="preserve">
    <value>Nom de la série d'entrée</value>
    <comment>Input series name</comment>
  </data>
  <data name="RemoveAds.Text" xml:space="preserve">
    <value>Êtes-vous fatigué de ces annonces?</value>
    <comment>Are you tired of these ads?</comment>
  </data>
  <data name="ComicDetailsDeleteComics" xml:space="preserve">
    <value>Weet je zeker dat je de geselecteerde strips wilt verwijderen?</value>
    <comment>Are you sure you want to delete the selected comics?</comment>
  </data>
  <data name="GeneralAppBarUpdatePublisher.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>modifier éditeur</value>
    <comment>Update publisher</comment>
  </data>
  <data name="GeneralAppBarUpdateSeries.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>modifier série</value>
    <comment>Update series</comment>
  </data>
  <data name="PrivacyPolicyText" xml:space="preserve">
    <value>Cette application ne recueille ni ne publie aucune information personnelle,
il faut avoir accès à votre connexion Internet pour être en mesure d'afficher des publicités.

Si vous souhaitez signaler toute violation de cette politique, s'il vous plaît contactez-moi à e.feggelen@outlook.com</value>
    <comment>This application does not collect or publish any personal information,
it requires access to your internet connection to be able to display advertisements.

If you would like to report any violations of this policy, please contact me at e.feggelen@outlook.com</comment>
  </data>
  <data name="SettingsCommandAboutPrivacyTitle" xml:space="preserve">
    <value>Politique de confidentialité</value>
    <comment>Privacy Policy</comment>
  </data>
  <data name="SettingsCommandAboutTitle" xml:space="preserve">
    <value>Sur</value>
    <comment>About</comment>
  </data>
  <data name="GeneralAppBarDelete.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Effacer</value>
    <comment>Delete</comment>
  </data>
  <data name="GeneralAppBarRead.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Lire</value>
    <comment>Read</comment>
  </data>
  <data name="ViewerAppBarFirst.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Premier page</value>
    <comment>First</comment>
  </data>
  <data name="ViewerAppBarLast.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Dernier page</value>
    <comment>Last</comment>
  </data>
  <data name="ViewerAppBarNext.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Suivant page</value>
    <comment>Next</comment>
  </data>
  <data name="ViewerAppBarOf.Text" xml:space="preserve">
    <value>de</value>
    <comment>of</comment>
  </data>
  <data name="ViewerAppBarPage.Text" xml:space="preserve">
    <value>Page</value>
    <comment>Page</comment>
  </data>
  <data name="ViewerAppBarPrev.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Précédent page</value>
    <comment>Prev</comment>
  </data>
  <data name="ViewerAppBarTwoPage.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Deux pages</value>
    <comment>Split</comment>
  </data>
  <data name="ViewerAppBarOnePage.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Une page</value>
    <comment>Split</comment>
  </data>
  <data name="ViewerAppBarLeftToRight.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Gauche à Droite</value>
    <comment>LeftToRight</comment>
  </data>
  <data name="ViewerAppBarRightToLeft.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Droite à Gauche</value>
    <comment>Right To Left</comment>
  </data>
</root>